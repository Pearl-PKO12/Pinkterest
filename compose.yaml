services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: pinterest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d pinterest"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis_cache
    restart: always
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: ./apps/server/DockerfileBuild
    container_name: server
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://user:12345@postgres:5432/pinterest
      REDIS_URL: redis://redis:6379
    # volumes:
    #   - ./backend:/app
    ports:
      - "4000:4000"
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5

  frontend:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    container_name: web
    restart: always
    depends_on:
      - backend
    # volumes:
    #   - ./frontend:/app
    ports:
      - "3000:3000"
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:3000"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5

volumes:
  postgres_data:
  redis_data:

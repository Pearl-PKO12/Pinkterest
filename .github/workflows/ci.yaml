name: CI/CD Pipeline

on:
  push:
    branches:
      - workflow
  pull_request:
    branches:
      - workflow

permissions:
  id-token: write   
  contents: read  
    

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - uses: pnpm/action-setup@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'
          cache: "pnpm"
          cache-dependency-path: '**/pnpm-lock.yaml'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Generate prisma schema 
        shell: bash 
        run: npx prisma generate --schema ./packages/schema/prisma/schema.prisma
      
      - name: Add bin folder to PATH 
        shell: bash 
        run: export PATH="./node_modules/.bin:$PATH"
      
      - name: Run tests 
        run: pnpm --filter=server test:e2e
      
  pass-test:     
    runs-on: ubuntu-latest 
    needs: test 
    steps: 
      - name: Pass test 
        shell: bash
        run: echo "passed"

  # web:
  #   runs-on: ubuntu-latest
    
  #   steps:
  #     - uses: actions/checkout@v3
        
  #     - name: Build web 
  #       uses: "./.github/actions/docker-build/"
  #       secrets: inherit
  #       with: 
  #         docker_file_path: ./apps/web/Dockerfile
  #         container_name: web 
  #         service_name: frontend
  #         ECR_REPOSITORY: ${{ secrets.ECR_WEB_REPOSITORY }}
    
  # server:     
  #   runs-on: ubuntu-latest
      
  #   steps:
  #     - uses: actions/checkout@v3
      
  #     - name: Build server 
  #       uses: "./.github/actions/docker-build/"
  #       with: 
  #         docker_file_path: ./apps/server/DockerfileBuild
  #         container_name: server
  #         service_name: backend
  #         ECR_REPOSITORY: ${{ secrets.ECR_SERVER_REPOSITORY }}




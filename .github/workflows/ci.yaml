name: CI/CD Pipeline

on:
  push:
    branches:
      - workflow
  pull_request:
    branches:
      - workflow

permissions:
  id-token: write   
  contents: read  
    

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version-file: '.nvmrc'

  #     - name: Install dependencies
  #       run: npm install

  web:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
        
      - name: Build web 
        uses: "./.github/actions/docker-build/"
        with: 
          docker_file_path: ./apps/web/Dockerfile
          container_name: web 
          service_name: frontend
          ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          REGION: ${{ secrets.REGION }}
          ECR_REPOSITORY: ${{ secrets.ECR_WEB_REPOSITORY }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          EC2_URL: ${{ secrets.EC2_URL }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          
    
  server:     
    runs-on: ubuntu-latest
      
    steps:
      - uses: actions/checkout@v3
      
      - name: Build server 
        uses: "./.github/actions/docker-build/"
        with: 
          docker_file_path: ./apps/server/DockerfileBuild
          container_name: server
          service_name: backend
          ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          REGION: ${{ secrets.REGION }}
          ECR_REPOSITORY: ${{ secrets.ECR_SERVER_REPOSITORY }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          EC2_URL: ${{ secrets.EC2_URL }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}




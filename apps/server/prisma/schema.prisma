// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  username     String    @unique
  first_name    String?
  last_name     String?
  about         String?
  website       String?
  password      String
  date_of_birth DateTime? @db.Date
  gender        Gender?
  country       String?
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  Pin           Pin[]
  Board         Board[]
  Post          Post[]
  Account       Account?
  Session       Session[]
}

model Account {
  id      String @id @default(uuid())
  user    User   @relation(fields: [user_id], references: [id])
  user_id String @unique
}

model Session {
  refresh_token_hash String   @unique
  expires_at         DateTime
  user               User     @relation(fields: [userId], references: [id])
  userId             String
  created_at         DateTime @default(now())
}

model Board {
  id         String   @id @default(uuid())
  name       String
  private    Boolean  @default(false)
  user       User     @relation(fields: [user_id], references: [id])
  user_id    String
  Pin        Pin[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Post {
  id            String   @id @default(uuid())
  title         String?
  image_url     String
  external_link String?
  description   String?
  tags          String?
  author        User     @relation(fields: [author_id], references: [id])
  author_id     String
  Pin           Pin[]
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
}

model Pin {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [user_id], references: [id])
  user_id    String
  post       Post     @relation(fields: [post_id], references: [id])
  post_id    String
  board      Board?   @relation(fields: [board_id], references: [id])
  board_id   String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

enum Gender {
  Male
  Female
  Other
}
